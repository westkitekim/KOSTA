<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!-- 어노테이션 처리를 위해 주석처리 , context 선택 -->
<!-- <bean id="pointDAO" class="model.PointDAOImpl">
	<constructor-arg ref="dbcp"/>

</bean>
	
<bean id="memberDAO" class="model.MemberDAOImpl">
	<constructor-arg ref="dbcp"/>
</bean>
id에 getBean이름과 동일하게 작성(해당하는 id의 클래스 객체를 가져오는 것이므로)
<bean id="memberService" class="model.MemberServiceImpl">
	/ 슬래시로 코드 줄이기
	<constructor-arg ref="memberDAO"/>
	<constructor-arg ref="pointDAO"/>
</bean> -->

<!-- 외부 라이브러리 connection pool Maven으로 사용하기 -->
<!-- apache dbcp -->
<bean id="dbcp" class="org.apache.commons.dbcp2.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
	<property name="username" value="scott"/>
	<property name="password" value="tiger"/>
</bean>

<!-- Annotation 기반 IOC DI/DL 설정 -->
<context:component-scan base-package="model"/>
</beans>
