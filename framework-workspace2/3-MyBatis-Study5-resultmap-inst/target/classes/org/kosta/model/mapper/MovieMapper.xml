<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.model.mapper.MovieMapper">
	<insert id="registerDirector" parameterType="DirectorVO">
		insert into director(director_id, director_name, intro) values(director_seq.nextval, #{directorName}, #{intro})
	</insert>
	
	<select id="getAllDirectorList" resultType="DirectorVO">
		select director_id, director_name, intro from director order by director_id desc
	</select>
	<!-- mybatis에서 parameterMap은 사용하지 않음 -->
	<!-- MovieVO has a DirectorVO: #{directorVO.directorId} 인스턴스명.인스턴스 변수명 -->
	<insert id="registerMovie" parameterType="MovieVO">
		insert into movie(movie_id, title, genre, attendance, director_id) 
		values(movie_seq.nextval, #{title}, #{genre}, #{attendance}, #{directorVO.directorId})
	</insert>
	
	<!-- TestSpringMyBatis3 -->
	<!-- 
			영화 리스트를 조회하기 위한 resultmap
			MovieVO has a DirectorVO 형식으로 결과값을 반환받기 위한 resultmap
			MovieVO 의 인스턴스 변수인 directorVO에 감독객체를 할당하고 directorVO의 
			directorName에 감독이름을 할당하기 위해서는 resultmap을 이용해야 한다 
			
			type : 반환값 
	-->
	<resultMap type="MovieVO" id="movieListRM">
		<!-- setDirectorName 으로 주입?  -->
		<result column="director_name" property="directorVO.directorName"/>
	</resultMap>
	<!-- has a realationship 이기 때문에 resultMap -->
	<!-- resultType이 아니라 위에서 정의한 resultMap으로 반환속성을 지정한다 -->
	<select id="getAllMovieList" resultMap="movieListRM">
		select m.title, d.director_name
		from director d, movie m
		where m.director_id = d.director_id
	</select>
	
	<!-- 4 -->
	<!-- 
			영화상세정보(감독상세정보 포함)를 조회하기 위한 resultmap을 정의 
			MovieVO has a DirectorVO 형식으로 조회하기 위해 resultmap을 이용하고 
			resultmap은 extends 가 가능하므로 위의 movieListRM을 상속받고
			필요한 속성은 추가적으로 명시하면 된다
			
			상속 -> 재사용과 비슷하게 생각할것 id = movieListRM
	-->
	<resultMap type="MovieVO" id="detailMovieRM" extends="movieListRM">
		<result column="director_id" property="directorVO.directorId"/>
		<result column="intro" property="directorVO.intro"/>
	</resultMap>
	
	<select id="findMovieAndDirectorVOById" resultMap="detailMovieRM">
		select m.movie_id, m.title, m.genre, m.attendance, d.director_id, d.director_name, d.intro
		from movie m, director d
		where m.director_id = d.director_id
		and m.movie_id = #{value}
	</select>
</mapper>









